name: Build and Package Coreutils

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64, 386]
        exclude:
          - os: macos-latest
            arch: 386
          - os: windows-latest
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set Architecture Mapping
        id: arch_map
        run: |
          case "${{ matrix.arch }}" in
            amd64)  ARCH_ALIAS=x86_64 ;;
            arm64)  ARCH_ALIAS=aarch64 ;;
            386)    ARCH_ALIAS=i686 ;;
            *)      echo "Unsupported architecture" && exit 1 ;;
          esac
          echo "ARCH_ALIAS=$ARCH_ALIAS" >> $GITHUB_ENV
        shell: bash

      - name: Download Coreutils
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest)
              OS=linux
              EXT=tar.gz
              ;;
            macos-latest)
              OS=darwin
              EXT=tar.gz
              ;;
            windows-latest)
              OS=windows
              EXT=zip
              ;;
            *)
              echo "Unsupported OS" && exit 1
              ;;
          esac
          
          # 获取最新版本的 Coreutils release
          URL="https://github.com/uutils/coreutils/releases/latest/download/coreutils-$OS-$ARCH_ALIAS.$EXT"
          echo "Downloading $URL"
          curl -LO $URL
        shell: bash

      - name: Extract and Rename Coreutils
        run: |
          # 创建目标目录
          mkdir -p memory/bin
          
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            unzip coreutils-*.zip
            mv coreutils.exe memory/bin/coreutils-${{ matrix.os }}-${{ matrix.arch }}.exe
          else
            tar -xzf coreutils-*.tar.gz
            mv coreutils memory/bin/coreutils-${{ matrix.os }}-${{ matrix.arch }}
          fi
        shell: bash

      - name: Upload Coreutils binaries
        uses: actions/upload-artifact@v4
        with:
          name: coreutils-binaries
          path: memory/bin/
